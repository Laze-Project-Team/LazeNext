関数: 実行() => (){
	マウスキャプチャ();
	配列<実数>: コース;
	整数: 数 = 12;
	(12)回繰り返す{
		コース.追加(10.0 * cos(ラジアンへ((360.0 / 数) * カウンタ)) + 10.0);
		コース.追加(10.0 * sin(ラジアンへ((360.0 / 数) * カウンタ)) + 10.0);
	}
	ライントレースシミュレーション: ロボット(コース, ベクトル2D(0.0, 10.0), 0 - (1.0), 10.0, 1.0, 10.0);
	ロボット.左モーターON = 1;
	ロボット.右モーターON = 1;
	ロボット.左モーター向き = 1;
	ロボット.左モーター速度 = 3.0;
	ロボット.右モーター速度 = 3.0;
	無限ループ{
		もし(ロボット.センサー値[0] > 130 && ロボット.センサー値[1] > 130)ならば{
            ロボット.左モーターON = 1;
            ロボット.右モーターON = 1;
        }
        でなければ、もし(ロボット.センサー値[0] > 130 && ロボット.センサー値[1] < 130)ならば{
            ロボット.左モーターON = 0;
            ロボット.右モーターON = 1;
        }
        でなければ、もし(ロボット.センサー値[0] < 130 && ロボット.センサー値[1] > 130)ならば{
            ロボット.左モーターON = 1;
            ロボット.右モーターON = 0;
        }
        でなければ、もし(ロボット.センサー値[0] < 130 && ロボット.センサー値[1] < 130)ならば{
            ロボット.左モーターON = 0;
            ロボット.右モーターON = 0;
        }
		ロボット.アップデート();
	}
}
