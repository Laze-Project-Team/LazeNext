クラス : 箱 {
公開 : 	幅 という 実数 を  おく  。 
	高さ という 実数 を  おく  。 
	質量 という 実数 を  おく  。 
	慣性モーメント という 実数 を  おく  。 
	( w という 実数 , h という 実数 , m という 実数 ) を  とり 箱 という  関数  を  おく  。 ここから
		幅 に w を  代入する  。 
		高さ に h を  代入する  。 
		質量 に m を  代入する  。 
		慣性モーメント に m  * ( w  * w  + h  * h )  / 12 を  代入する  。 
	ここまで実行 
} 
クラス : 物体 {
公開 : 	座標 という ベクトル2D を  おく  。 
	速度 という ベクトル2D を  おく  。 
	角度 という 実数 を  おく  。 
	角速度 という 実数 を  おく  。 
	力 という ベクトル2D を  おく  。 
	トルク という 実数 を  おく  。 
	形 という 箱 を  おく  。 
	( p という ベクトル2D , v という ベクトル2D , a という 実数 , av という 実数 , f という ベクトル2D , t という 実数 , b という 箱 ) を  とり 物体 という  関数  を  おく  。 ここから
		座標 に p を  代入する  。 
		速度 に v を  代入する  。 
		角度 に a を  代入する  。 
		角速度 に av を  代入する  。 
		力 に f を  代入する  。 
		トルク に t を  代入する  。 
		形 に b を  代入する  。 
	ここまで実行 
} 
クラス : 物理ワールド2D {
公開 : 	物体配列 という 配列 < * 物体 > を  おく  。 
	( 高さ という 実数 , g という 実数 ) を  とり 物理ワールド2D という  関数  を  おく  。 ここから
		重力加速度 に g を  代入する  。 
		背景色 という ベクトル3D の  オブジェクト  を 0.0 , 0.0 , 0.0 で  初期化  。 
		高さ , 背景色 ワールド の シーン2D する  。 
		物体配列 の 配列 する  。 
		前回の時間 に 時間計測 ( )  / 1000.0 を  代入する  。 
	ここまで実行 
	( w という 実数 , h という 実数 , m という 実数 , 色 という ベクトル3D , initPos という ベクトル2D , initVec という ベクトル2D , initAngle という 実数 , initAngVec という 実数 ) を  とり 物体追加 という  関数  を  おく  。 ここから
		shape という 箱 の  オブジェクト  を w , h , m で  初期化  。 
		重力 という ベクトル2D の  オブジェクト  を 0.0 , ( 0  - ( m  * 重力加速度 ) ) で  初期化  。 
		body という * 物体 を メモリ確保 ( バイト数 ( body に  ある  オブジェクト ) ) で  初期化  。 
		initPos , initVec , initAngle , initAngVec , 重力 , 0 , shape body -> 物体 する  。 
		body 物体配列 の 追加 する  。 
		id という 整数 を ワールド の 四角形追加 ( w , h , initPos , 色 , 1.0 ) で  初期化  。 
	ここまで実行 
	関数 アップデート を  おく  。 ここから
		経過時間 という 実数 を 時間計測 ( )  / 1000.0  - 前回の時間 で  初期化  。 
		前回の時間 に 時間計測 ( )  / 1000.0 を  代入する  。 
		物体配列 の 長さ ( ) 回繰り返す ここから
			rigidBody という * 物体 を 物体配列 の 取得 ( カウンタ ) で  初期化  。 
			加速度 という ベクトル2D の  オブジェクト  を rigidBody -> 力 の x  / rigidBody -> 形 の 質量 , rigidBody -> 力 の y  / rigidBody -> 形 の 質量 で  初期化  。 
			rigidBody -> 速度 の x に rigidBody -> 速度 の x  + 加速度 の x  * 経過時間 を  代入する  。 
			rigidBody -> 速度 の y に rigidBody -> 速度 の y  + 加速度 の y  * 経過時間 を  代入する  。 
			rigidBody -> 座標 の x に rigidBody -> 座標 の x  + rigidBody -> 速度 の x  * 経過時間 を  代入する  。 
			rigidBody -> 座標 の y に rigidBody -> 座標 の y  + rigidBody -> 速度 の y  * 経過時間 を  代入する  。 
			角加速度 という 実数 を rigidBody -> トルク  / rigidBody -> 形 の 慣性モーメント で  初期化  。 
			rigidBody -> 角速度 に rigidBody -> 角速度  + 角加速度  * 経過時間 を  代入する  。 
			rigidBody -> 角度 に rigidBody -> 角度  + rigidBody -> 角速度  * 経過時間 を  代入する  。 
			rigidBody -> 座標 ワールド の スプライト配列 の 取得 ( カウンタ ) -> 座標設定 する  。 
			rigidBody -> 角度 ワールド の スプライト配列 の 取得 ( カウンタ ) -> 角度設定 する  。 
		ここまで実行 
		ワールド の 描画 する  。 
	ここまで実行 
非公開 : 	重力加速度 という 実数 を  おく  。 
	前回の時間 という 実数 を  おく  。 
	ワールド という シーン2D を  おく  。 
} 
関数 実行 を  おく  。 ここから
	PI という 実数 を 3.14159265358979312 で  初期化  。 
	物理ワールド という 物理ワールド2D の  オブジェクト  を 1.0 , 9.8100000000000005 で  初期化  。 
	青 という ベクトル3D の  オブジェクト  を 0.200000000000000011 , 0.5 , 0.699999999999999956 で  初期化  。 
	初期位置 という ベクトル2D の  オブジェクト  を 0.0 , 1.0 で  初期化  。 
	初速度 という ベクトル2D の  オブジェクト  を 0.0 , 0.0 で  初期化  。 
	0.149999999999999994 , 0.149999999999999994 , 1.0 , 青 , 初期位置 , 初速度 , 0.0 , 0.0 物理ワールド の 物体追加 する  。 
	無限ループ ここから
		物理ワールド の アップデート する  。 
	ここまで実行 
ここまで実行 
